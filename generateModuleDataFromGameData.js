var fs = require("fs");
var someHumanData = require("./someHumanData").someHumanData;
var modulesByTypes = require("./someHumanData").modulesByTypes;
var csv2json = require("csv2json");

fs.createReadStream("./raw_data/modules.csv")
  .pipe(csv2json({}))
  .pipe(fs.createWriteStream("./raw_data/modules.json"))
  .on("finish", function() {
    const file = fs.readFileSync("./raw_data/modules.json").toString();

    const modulesDataRaw = JSON.parse(file);

    let modulesData = getModuleInfo(modulesDataRaw);
    let moduleTypes = getModuleTypes(modulesDataRaw);

    saveToFile("./raw_data/modulesData.js", modulesData, moduleTypes);
  });

function saveToFile(filePath, modulesData, moduleTypes) {
  fs.writeFileSync(
    filePath,
    `
// generated by ${__filename} 
// at ${(new Date()).toString()}

var modulesData = ${JSON.stringify(modulesData, true, 2)}

var modulesByTypes = ${JSON.stringify(modulesByTypes, true, 2)}

const allModuleKeys = [
  ...modulesByTypes.trade,
  ...modulesByTypes.mining,
  ...modulesByTypes.weapon,
  ...modulesByTypes.shield,
  ...modulesByTypes.support
];

module.exports = {
  modulesData,
  allModuleKeys,
  modulesByTypes
};
`
  );
}

function getModuleTypes(modulesData) {
  let moduleTypes = {};

  modulesData.forEach(modData => {
    if (modData.Hide) {
      return;
    }

    if (modData.SlotType) {
      const slot = modData.SlotType.toLowerCase();

      if (!moduleTypes[slot]) {
        moduleTypes[slot] = [];
      }
      moduleTypes[slot].push(modData.Name);
    }
  });

  return moduleTypes;
}

function getModuleInfo(modulesData) {
  let modulesInfo = {};

  let currentName = null;

  modulesData.forEach(modData => {
    if (modData.Hide) {
      return;
    }

    if (modData.Name && currentName !== modData.Name) {
      currentName = modData.Name;
    }

    if (!modulesInfo[currentName]) {
      modulesInfo[currentName] = {
        eng: someHumanData[currentName].eng,
        id: currentName,
        colNames: [`UnlockPrice`, `UnlockTime`],
        data: []
      };
    }

    modulesInfo[currentName].data.push([
      +modData.UnlockPrice,
      +modData.UnlockTime
    ]);
  });

  return modulesInfo;
}
