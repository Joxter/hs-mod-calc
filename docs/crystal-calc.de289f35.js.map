{"version":3,"sources":["crystal-calc/formulas.js","utils.js","crystal-calc/crystal-calc.js"],"names":["min2crystals","x","Math","floor","credits2crystals","hydrogen2crystals","crystals2sec","ceil","crystals2credits","crystals2hydrogen","stringifyTerm","sec","secInMin","days","hours","mins","result","push","join","numberWithCommas","toString","replace","main","document","body","addEventListener","event","input","target","maxLength","getAttribute","value","length","slice","initSec2crystals","initCredits2crystals","initHydrogen2crystals","initCrystals2any","daysInput","querySelector","hoursInput","minInput","resultEl","count","getSec","innerHTML","inputEl","int","crystalResultEl","creditResultEl","hydrogenResultEl","secResult","creditsResult","hydrogenResult","a","parseInt"],"mappings":"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","file":"crystal-calc.de289f35.js","sourceRoot":"../pages","sourcesContent":["export function min2crystals(x) {\n  if (x > 1209600) {\n    return null;\n  }\n\n  return Math.floor(\n    x > 86400 && x <= 1209600\n      ? (2700 / 1123200) * (x - 86400) + 300\n      : x > 3600 && x <= 86400\n      ? (270 / 82800) * (x - 3600) + 30\n      : x > 60 && x <= 3600\n      ? (29 / 3540) * (x - 60) + 1\n      : 1\n  );\n}\n\nexport function credits2crystals(x) {\n  if (x > 10000000) {\n    return null;\n  }\n\n  return Math.floor(\n    x > 1000000 && x <= 10000000\n      ? (8000 / 9000000) * (x - 1000000) + 4000\n      : x > 100000 && x <= 1000000\n      ? (3000 / 900000) * (x - 100000) + 1000\n      : x > 10000 && x <= 100000\n      ? (850 / 90000) * (x - 10000) + 150\n      : x > 1000 && x <= 10000\n      ? (130 / 9000) * (x - 1000) + 20\n      : x > 100 && x <= 1000\n      ? (19 / 900) * (x - 100) + 1\n      : 1\n  );\n}\n\nexport function hydrogen2crystals(x) {\n  if (x > 1000000) {\n    return null;\n  }\n\n  return Math.floor(\n    x > 100000 && x <= 1000000\n      ? (8000 / 900000) * (x - 100000) + 2000\n      : x > 10000 && x <= 100000\n      ? (1600 / 90000) * (x - 10000) + 400\n      : x > 1000 && x <= 10000\n      ? (320 / 9000) * (x - 1000) + 80\n      : x > 100 && x <= 1000\n      ? (65 / 900) * (x - 100) + 15\n      : x > 10 && x <= 100\n      ? (14 / 90) * (x - 10) + 1\n      : 1\n  );\n}\n\nexport function crystals2sec(x) {\n  if (x > 3000) {\n    return null;\n  }\n\n  return Math.ceil(\n    x > 300 && x <= 3000\n      ? ((1123200 * (x - 300)) / 2700 + 86400) / 60\n      : x > 30 && x <= 300\n      ? ((82800 * (x - 30)) / 270 + 3600) / 60\n      : x > 1 && x <= 30\n      ? ((3540 * (x - 1)) / 29 + 60) / 60\n      : (x = 1 ? 1 : 0)\n  );\n}\n\nexport function crystals2credits(x) {\n  return Math.ceil(\n    x > 12000\n      ? 9999999\n      : x > 4000 && x <= 12000\n      ? (9000000 * (x - 4000)) / 8000 + 1000000\n      : x > 1000 && x <= 4000\n      ? (900000 * (x - 1000)) / 3000 + 100000\n      : x > 150 && x <= 1000\n      ? (90000 * (x - 150)) / 850 + 10000\n      : x > 20 && x <= 150\n      ? (9000 * (x - 20)) / 130 + 1000\n      : x > 1 && x <= 20\n      ? (900 * (x - 1)) / 19 + 100\n      : 1\n  );\n}\n\nexport function crystals2hydrogen(x) {\n  return Math.floor(\n    x > 10000\n      ? 999999\n      : x > 2000 && x <= 10000\n      ? (900000 * (x - 2000)) / 8000 + 100000\n      : x > 400 && x <= 2000\n      ? (90000 * (x - 400)) / 1600 + 10000\n      : x > 80 && x <= 400\n      ? (9000 * (x - 80)) / 320 + 1000\n      : x > 15 && x <= 80\n      ? (900 * (x - 15)) / 65 + 100\n      : x > 1 && x <= 15\n      ? (90 * (x - 1)) / 14 + 10\n      : 1\n  );\n}\n","\nexport function stringifyTerm(sec) {\n    const secInMin = 60;\n    const secInHour = 60 * secInMin;\n    const secInDay = 24 * secInHour;\n\n    const days = Math.floor(sec / secInDay);\n    const hours = Math.floor((sec - days * secInDay) / secInHour);\n    const mins = Math.floor((sec - days * secInDay - hours * secInHour) / secInMin);\n\n    let result = [];\n\n    if (days) {\n        result.push(days + `d`);\n    }\n\n    if (hours) {\n        result.push(hours + `h`);\n    }\n\n    if (mins) {\n        result.push(mins + `m`);\n    }\n\n    return result.join(` `);\n}\n\nexport function numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n}\n","import {\n  min2crystals,\n  credits2crystals,\n  hydrogen2crystals,\n  crystals2sec,\n  crystals2credits,\n  crystals2hydrogen,\n} from './formulas';\n\nimport { stringifyTerm, numberWithCommas } from '../utils';\n\ndocument.addEventListener('DOMContentLoaded', main);\n\nfunction main() {\n  document.body.addEventListener(`input`, (event) => {\n    const input = event.target;\n    const maxLength = +input.getAttribute(`maxlength`);\n\n    if (input.value.length > maxLength) {\n      input.value = input.value.slice(0, 2);\n    }\n  });\n\n  initSec2crystals();\n  initCredits2crystals();\n  initHydrogen2crystals();\n\n  initCrystals2any();\n}\n\nfunction initSec2crystals() {\n  const daysInput = document.querySelector(`#days-2-crystals`);\n  const hoursInput = document.querySelector(`#hours-2-crystals`);\n  const minInput = document.querySelector(`#mins-2-crystals`);\n  const resultEl = document.querySelector(`#sec-2-crystals-output`);\n\n  function count() {\n    const days = daysInput.value;\n    const hours = hoursInput.value;\n    const mins = minInput.value;\n\n    const result = mins === `` && hours === `` && days === `` ? null : min2crystals(getSec(days, hours, mins));\n\n    resultEl.innerHTML = result === null ? `-` : numberWithCommas(result);\n  }\n\n  minInput.addEventListener(`input`, count);\n  hoursInput.addEventListener(`input`, count);\n  daysInput.addEventListener(`input`, count);\n  count();\n}\n\nfunction initCredits2crystals() {\n  const inputEl = document.querySelector(`#credits-2-crystals`);\n  const resultEl = document.querySelector(`#credits-2-crystals-output`);\n\n  function count() {\n    const input = inputEl.value;\n    const result = input === `` ? null : credits2crystals(int(input));\n\n    resultEl.innerHTML = result === null ? `-` : numberWithCommas(result);\n  }\n\n  inputEl.addEventListener(`input`, count);\n  count();\n}\n\nfunction initHydrogen2crystals() {\n  const inputEl = document.querySelector(`#hydrogen-2-crystals`);\n  const resultEl = document.querySelector(`#hydrogen-2-crystals-output`);\n\n  function count() {\n    const input = inputEl.value;\n    const result = input === `` ? null : hydrogen2crystals(int(input));\n\n    resultEl.innerHTML = result === null ? `-` : numberWithCommas(result);\n  }\n\n  inputEl.addEventListener(`input`, count);\n  count();\n}\n\nfunction initCrystals2any() {\n  const inputEl = document.querySelector(`#crystals-2-any`);\n  const crystalResultEl = document.querySelector(`#crystals-2-sec-output`);\n  const creditResultEl = document.querySelector(`#crystals-2-credits-output`);\n  const hydrogenResultEl = document.querySelector(`#crystals-2-hydrogen-output`);\n\n  function count() {\n    const input = inputEl.value;\n    const secResult = input === `` ? null : crystals2sec(int(input));\n    const creditsResult = input === `` ? null : crystals2credits(int(input));\n    const hydrogenResult = input === `` ? null : crystals2hydrogen(int(input));\n\n    crystalResultEl.innerHTML = secResult === null ? `-` : stringifyTerm(secResult * 60);\n    creditResultEl.innerHTML = creditsResult === null ? `-` : numberWithCommas(creditsResult);\n    hydrogenResultEl.innerHTML = hydrogenResult === null ? `-` : numberWithCommas(hydrogenResult);\n  }\n\n  inputEl.addEventListener(`input`, count);\n  count();\n}\n\nfunction int(a) {\n  return parseInt(a) || 0;\n}\n\nfunction getSec(days, hours, mins) {\n  return int(mins) * 60 + int(hours) * 60 * 60 + int(days) * 60 * 60 * 24;\n}\n"]}